plugins {
	id 'fabric-loom' version '0.2.0-SNAPSHOT'
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "1.3.21"
}

repositories {
	maven {
		url = "http://maven.fabricmc.net/"
		name = "Fabric"
	}
	maven {
		url = "https://kotlin.bintray.com/kotlinx"
		name = "Kotlin X"
	}

    // For cotton and json-factory
    maven{url = "http://server.bbkr.space:8081/artifactory/libs-release"}
    maven{url = "http://server.bbkr.space:8081/artifactory/libs-snapshot"}

    // For towelette
    maven{
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {

}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc:fabric:${project.fabric_version}"
	modCompile "io.github.prospector.silk:SilkAPI:$silk_version"

	// TODO: loom 0.3.0 will allow using only modCompile
	modCompile(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.21-SNAPSHOT")
	compileOnly(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.21-SNAPSHOT")

	// Other Mods
    modCompile("towelette:Towelette:$towelette_version")
    modCompile("io.github.cottonmc:cotton:$cotton_version")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}